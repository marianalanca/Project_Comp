Terminals unused in grammar

    RESERVED


State 92 conflicts: 1 shift/reduce
State 94 conflicts: 18 shift/reduce
State 107 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition optFuncAndDec
    3                         | FunctionDeclaration optFuncAndDec
    4                         | Declaration optFuncAndDec

    5 optFuncAndDec: FunctionsAndDeclarations
    6              | %empty

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE DeclarationsAndStatements RBRACE

    9 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   10 DeclarationsAndStatements: Statement optDecAndState
   11                          | Declaration optDecAndState

   12 optDecAndState: DeclarationsAndStatements
   13               | %empty

   14 FunctionDeclarator: ID LPAR ParameterList RPAR

   15 ParameterList: ParameterDeclaration optParamList

   16 optParamList: optParamList COMMA ParameterDeclaration
   17             | %empty

   18 ParameterDeclaration: TypeSpec optParamDec

   19 optParamDec: ID
   20            | %empty

   21 Declaration: TypeSpec Declarator optDeclaration SEMI

   22 optDeclaration: optDeclaration COMMA Declarator
   23               | %empty

   24 TypeSpec: CHAR
   25         | INT
   26         | VOID
   27         | SHORT
   28         | DOUBLE

   29 Declarator: ID OptDeclarator

   30 OptDeclarator: ASSIGN Expr
   31              | %empty

   32 Statement: optExp SEMI
   33          | LBRACE optState RBRACE
   34          | IF LPAR Expr RPAR Statement optElse
   35          | WHILE LPAR Expr RPAR Statement
   36          | RETURN optExp SEMI

   37 optExp: Expr
   38       | %empty

   39 optState: optState Statement
   40         | %empty

   41 optElse: ELSE Statement
   42        | %empty

   43 Expr: Expr optExpr Expr
   44     | PLUS Expr
   45     | MINUS Expr
   46     | NOT Expr
   47     | ID optID
   48     | INTLIT
   49     | CHRLIT
   50     | REALLIT
   51     | LPAR Expr RPAR

   52 optExpr: ASSIGN
   53        | COMMA
   54        | PLUS
   55        | MINUS
   56        | MUL
   57        | DIV
   58        | MOD
   59        | OR
   60        | AND
   61        | BITWISEAND
   62        | BITWISEOR
   63        | BITWISEXOR
   64        | EQ
   65        | NE
   66        | LE
   67        | GE
   68        | LT
   69        | GT

   70 optID: LPAR optExpCExp RPAR
   71      | %empty

   72 optExpCExp: Expr optCExp
   73           | %empty

   74 optCExp: optCExp COMMA Expr
   75        | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR (258) 24
    ELSE (259) 41
    IF (260) 34
    WHILE (261) 35
    INT (262) 25
    DOUBLE (263) 28
    SHORT (264) 27
    RETURN (265) 36
    VOID (266) 26
    BITWISEAND (267) 61
    BITWISEOR (268) 62
    BITWISEXOR (269) 63
    AND (270) 60
    ASSIGN (271) 30 52
    MUL (272) 56
    COMMA (273) 16 22 53 74
    DIV (274) 57
    EQ (275) 64
    GE (276) 67
    GT (277) 69
    LBRACE (278) 8 33
    LE (279) 66
    LPAR (280) 14 34 35 51 70
    LT (281) 68
    MINUS (282) 45 55
    MOD (283) 58
    NE (284) 65
    NOT (285) 46
    OR (286) 59
    PLUS (287) 44 54
    RBRACE (288) 8 33
    RPAR (289) 14 34 35 51 70
    SEMI (290) 9 21 32 36
    CHRLIT <string> (291) 49
    ID <string> (292) 14 19 29 47
    INTLIT <string> (293) 48
    REALLIT <string> (294) 50
    RESERVED <string> (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    Program (42)
        on left: 1
        on right: 0
    FunctionsAndDeclarations (43)
        on left: 2 3 4
        on right: 1 5
    optFuncAndDec (44)
        on left: 5 6
        on right: 2 3 4
    FunctionDefinition (45)
        on left: 7
        on right: 2
    FunctionBody (46)
        on left: 8
        on right: 7
    FunctionDeclaration (47)
        on left: 9
        on right: 3
    DeclarationsAndStatements (48)
        on left: 10 11
        on right: 8 12
    optDecAndState (49)
        on left: 12 13
        on right: 10 11
    FunctionDeclarator (50)
        on left: 14
        on right: 7 9
    ParameterList (51)
        on left: 15
        on right: 14
    optParamList (52)
        on left: 16 17
        on right: 15 16
    ParameterDeclaration (53)
        on left: 18
        on right: 15 16
    optParamDec (54)
        on left: 19 20
        on right: 18
    Declaration (55)
        on left: 21
        on right: 4 11
    optDeclaration (56)
        on left: 22 23
        on right: 21 22
    TypeSpec (57)
        on left: 24 25 26 27 28
        on right: 7 9 18 21
    Declarator (58)
        on left: 29
        on right: 21 22
    OptDeclarator (59)
        on left: 30 31
        on right: 29
    Statement (60)
        on left: 32 33 34 35 36
        on right: 10 34 35 39 41
    optExp (61)
        on left: 37 38
        on right: 32 36
    optState (62)
        on left: 39 40
        on right: 33 39
    optElse (63)
        on left: 41 42
        on right: 34
    Expr (64)
        on left: 43 44 45 46 47 48 49 50 51
        on right: 30 34 35 37 43 44 45 46 51 72 74
    optExpr (65)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
        on right: 43
    optID (66)
        on left: 70 71
        on right: 47
    optExpCExp (67)
        on left: 72 73
        on right: 70
    optCExp (68)
        on left: 74 75
        on right: 72 74


State 0

    0 $accept: . Program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    Program                   go to state 6
    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 1

   24 TypeSpec: CHAR .

    $default  reduce using rule 24 (TypeSpec)


State 2

   25 TypeSpec: INT .

    $default  reduce using rule 25 (TypeSpec)


State 3

   28 TypeSpec: DOUBLE .

    $default  reduce using rule 28 (TypeSpec)


State 4

   27 TypeSpec: SHORT .

    $default  reduce using rule 27 (TypeSpec)


State 5

   26 TypeSpec: VOID .

    $default  reduce using rule 26 (TypeSpec)


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 7

    1 Program: FunctionsAndDeclarations .

    $default  reduce using rule 1 (Program)


State 8

    2 FunctionsAndDeclarations: FunctionDefinition . optFuncAndDec

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 6 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 13
    optFuncAndDec             go to state 14
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 9

    3 FunctionsAndDeclarations: FunctionDeclaration . optFuncAndDec

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 6 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 13
    optFuncAndDec             go to state 15
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 10

    4 FunctionsAndDeclarations: Declaration . optFuncAndDec

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 6 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 13
    optFuncAndDec             go to state 16
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 11

    7 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
    9 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   21 Declaration: TypeSpec . Declarator optDeclaration SEMI

    ID  shift, and go to state 17

    FunctionDeclarator  go to state 18
    Declarator          go to state 19


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    5 optFuncAndDec: FunctionsAndDeclarations .

    $default  reduce using rule 5 (optFuncAndDec)


State 14

    2 FunctionsAndDeclarations: FunctionDefinition optFuncAndDec .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 15

    3 FunctionsAndDeclarations: FunctionDeclaration optFuncAndDec .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 16

    4 FunctionsAndDeclarations: Declaration optFuncAndDec .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 17

   14 FunctionDeclarator: ID . LPAR ParameterList RPAR
   29 Declarator: ID . OptDeclarator

    ASSIGN  shift, and go to state 20
    LPAR    shift, and go to state 21

    $default  reduce using rule 31 (OptDeclarator)

    OptDeclarator  go to state 22


State 18

    7 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
    9 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 19

   21 Declaration: TypeSpec Declarator . optDeclaration SEMI

    $default  reduce using rule 23 (optDeclaration)

    optDeclaration  go to state 26


State 20

   30 OptDeclarator: ASSIGN . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 35


State 21

   14 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterList         go to state 36
    ParameterDeclaration  go to state 37
    TypeSpec              go to state 38


State 22

   29 Declarator: ID OptDeclarator .

    $default  reduce using rule 29 (Declarator)


State 23

    8 FunctionBody: LBRACE . DeclarationsAndStatements RBRACE

    CHAR     shift, and go to state 1
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    SHORT    shift, and go to state 4
    RETURN   shift, and go to state 41
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 38 (optExp)

    DeclarationsAndStatements  go to state 43
    Declaration                go to state 44
    TypeSpec                   go to state 45
    Statement                  go to state 46
    optExp                     go to state 47
    Expr                       go to state 48


State 24

    9 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 9 (FunctionDeclaration)


State 25

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 7 (FunctionDefinition)


State 26

   21 Declaration: TypeSpec Declarator optDeclaration . SEMI
   22 optDeclaration: optDeclaration . COMMA Declarator

    COMMA  shift, and go to state 49
    SEMI   shift, and go to state 50


State 27

   51 Expr: LPAR . Expr RPAR

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 51


State 28

   45 Expr: MINUS . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 52


State 29

   46 Expr: NOT . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 53


State 30

   44 Expr: PLUS . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 54


State 31

   49 Expr: CHRLIT .

    $default  reduce using rule 49 (Expr)


State 32

   47 Expr: ID . optID

    LPAR  shift, and go to state 55

    $default  reduce using rule 71 (optID)

    optID  go to state 56


State 33

   48 Expr: INTLIT .

    $default  reduce using rule 48 (Expr)


State 34

   50 Expr: REALLIT .

    $default  reduce using rule 50 (Expr)


State 35

   30 OptDeclarator: ASSIGN Expr .
   43 Expr: Expr . optExpr Expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    $default  reduce using rule 30 (OptDeclarator)

    optExpr  go to state 75


State 36

   14 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 76


State 37

   15 ParameterList: ParameterDeclaration . optParamList

    $default  reduce using rule 17 (optParamList)

    optParamList  go to state 77


State 38

   18 ParameterDeclaration: TypeSpec . optParamDec

    ID  shift, and go to state 78

    $default  reduce using rule 20 (optParamDec)

    optParamDec  go to state 79


State 39

   34 Statement: IF . LPAR Expr RPAR Statement optElse

    LPAR  shift, and go to state 80


State 40

   35 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 81


State 41

   36 Statement: RETURN . optExp SEMI

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 38 (optExp)

    optExp  go to state 82
    Expr    go to state 48


State 42

   33 Statement: LBRACE . optState RBRACE

    $default  reduce using rule 40 (optState)

    optState  go to state 83


State 43

    8 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 84


State 44

   11 DeclarationsAndStatements: Declaration . optDecAndState

    CHAR     shift, and go to state 1
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    SHORT    shift, and go to state 4
    RETURN   shift, and go to state 41
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    SEMI      reduce using rule 38 (optExp)
    $default  reduce using rule 13 (optDecAndState)

    DeclarationsAndStatements  go to state 85
    optDecAndState             go to state 86
    Declaration                go to state 44
    TypeSpec                   go to state 45
    Statement                  go to state 46
    optExp                     go to state 47
    Expr                       go to state 48


State 45

   21 Declaration: TypeSpec . Declarator optDeclaration SEMI

    ID  shift, and go to state 87

    Declarator  go to state 19


State 46

   10 DeclarationsAndStatements: Statement . optDecAndState

    CHAR     shift, and go to state 1
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    SHORT    shift, and go to state 4
    RETURN   shift, and go to state 41
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    SEMI      reduce using rule 38 (optExp)
    $default  reduce using rule 13 (optDecAndState)

    DeclarationsAndStatements  go to state 85
    optDecAndState             go to state 88
    Declaration                go to state 44
    TypeSpec                   go to state 45
    Statement                  go to state 46
    optExp                     go to state 47
    Expr                       go to state 48


State 47

   32 Statement: optExp . SEMI

    SEMI  shift, and go to state 89


State 48

   37 optExp: Expr .
   43 Expr: Expr . optExpr Expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    $default  reduce using rule 37 (optExp)

    optExpr  go to state 75


State 49

   22 optDeclaration: optDeclaration COMMA . Declarator

    ID  shift, and go to state 87

    Declarator  go to state 90


State 50

   21 Declaration: TypeSpec Declarator optDeclaration SEMI .

    $default  reduce using rule 21 (Declaration)


State 51

   43 Expr: Expr . optExpr Expr
   51     | LPAR Expr . RPAR

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 91

    optExpr  go to state 75


State 52

   43 Expr: Expr . optExpr Expr
   45     | MINUS Expr .

    MUL  shift, and go to state 62
    DIV  shift, and go to state 64
    MOD  shift, and go to state 71

    $default  reduce using rule 45 (Expr)

    optExpr  go to state 75


State 53

   43 Expr: Expr . optExpr Expr
   46     | NOT Expr .

    $default  reduce using rule 46 (Expr)

    optExpr  go to state 75


State 54

   43 Expr: Expr . optExpr Expr
   44     | PLUS Expr .

    MUL  shift, and go to state 62
    DIV  shift, and go to state 64
    MOD  shift, and go to state 71

    $default  reduce using rule 44 (Expr)

    optExpr  go to state 75


State 55

   70 optID: LPAR . optExpCExp RPAR

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 73 (optExpCExp)

    Expr        go to state 92
    optExpCExp  go to state 93


State 56

   47 Expr: ID optID .

    $default  reduce using rule 47 (Expr)


State 57

   61 optExpr: BITWISEAND .

    $default  reduce using rule 61 (optExpr)


State 58

   62 optExpr: BITWISEOR .

    $default  reduce using rule 62 (optExpr)


State 59

   63 optExpr: BITWISEXOR .

    $default  reduce using rule 63 (optExpr)


State 60

   60 optExpr: AND .

    $default  reduce using rule 60 (optExpr)


State 61

   52 optExpr: ASSIGN .

    $default  reduce using rule 52 (optExpr)


State 62

   56 optExpr: MUL .

    $default  reduce using rule 56 (optExpr)


State 63

   53 optExpr: COMMA .

    $default  reduce using rule 53 (optExpr)


State 64

   57 optExpr: DIV .

    $default  reduce using rule 57 (optExpr)


State 65

   64 optExpr: EQ .

    $default  reduce using rule 64 (optExpr)


State 66

   67 optExpr: GE .

    $default  reduce using rule 67 (optExpr)


State 67

   69 optExpr: GT .

    $default  reduce using rule 69 (optExpr)


State 68

   66 optExpr: LE .

    $default  reduce using rule 66 (optExpr)


State 69

   68 optExpr: LT .

    $default  reduce using rule 68 (optExpr)


State 70

   55 optExpr: MINUS .

    $default  reduce using rule 55 (optExpr)


State 71

   58 optExpr: MOD .

    $default  reduce using rule 58 (optExpr)


State 72

   65 optExpr: NE .

    $default  reduce using rule 65 (optExpr)


State 73

   59 optExpr: OR .

    $default  reduce using rule 59 (optExpr)


State 74

   54 optExpr: PLUS .

    $default  reduce using rule 54 (optExpr)


State 75

   43 Expr: Expr optExpr . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 94


State 76

   14 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 14 (FunctionDeclarator)


State 77

   15 ParameterList: ParameterDeclaration optParamList .
   16 optParamList: optParamList . COMMA ParameterDeclaration

    COMMA  shift, and go to state 95

    $default  reduce using rule 15 (ParameterList)


State 78

   19 optParamDec: ID .

    $default  reduce using rule 19 (optParamDec)


State 79

   18 ParameterDeclaration: TypeSpec optParamDec .

    $default  reduce using rule 18 (ParameterDeclaration)


State 80

   34 Statement: IF LPAR . Expr RPAR Statement optElse

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 96


State 81

   35 Statement: WHILE LPAR . Expr RPAR Statement

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 97


State 82

   36 Statement: RETURN optExp . SEMI

    SEMI  shift, and go to state 98


State 83

   33 Statement: LBRACE optState . RBRACE
   39 optState: optState . Statement

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 99
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 38 (optExp)

    Statement  go to state 100
    optExp     go to state 47
    Expr       go to state 48


State 84

    8 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 8 (FunctionBody)


State 85

   12 optDecAndState: DeclarationsAndStatements .

    $default  reduce using rule 12 (optDecAndState)


State 86

   11 DeclarationsAndStatements: Declaration optDecAndState .

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 87

   29 Declarator: ID . OptDeclarator

    ASSIGN  shift, and go to state 20

    $default  reduce using rule 31 (OptDeclarator)

    OptDeclarator  go to state 22


State 88

   10 DeclarationsAndStatements: Statement optDecAndState .

    $default  reduce using rule 10 (DeclarationsAndStatements)


State 89

   32 Statement: optExp SEMI .

    $default  reduce using rule 32 (Statement)


State 90

   22 optDeclaration: optDeclaration COMMA Declarator .

    $default  reduce using rule 22 (optDeclaration)


State 91

   51 Expr: LPAR Expr RPAR .

    $default  reduce using rule 51 (Expr)


State 92

   43 Expr: Expr . optExpr Expr
   72 optExpCExp: Expr . optCExp

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    COMMA     [reduce using rule 75 (optCExp)]
    $default  reduce using rule 75 (optCExp)

    optExpr  go to state 75
    optCExp  go to state 101


State 93

   70 optID: LPAR optExpCExp . RPAR

    RPAR  shift, and go to state 102


State 94

   43 Expr: Expr . optExpr Expr
   43     | Expr optExpr Expr .

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    BITWISEAND  [reduce using rule 43 (Expr)]
    BITWISEOR   [reduce using rule 43 (Expr)]
    BITWISEXOR  [reduce using rule 43 (Expr)]
    AND         [reduce using rule 43 (Expr)]
    ASSIGN      [reduce using rule 43 (Expr)]
    MUL         [reduce using rule 43 (Expr)]
    COMMA       [reduce using rule 43 (Expr)]
    DIV         [reduce using rule 43 (Expr)]
    EQ          [reduce using rule 43 (Expr)]
    GE          [reduce using rule 43 (Expr)]
    GT          [reduce using rule 43 (Expr)]
    LE          [reduce using rule 43 (Expr)]
    LT          [reduce using rule 43 (Expr)]
    MINUS       [reduce using rule 43 (Expr)]
    MOD         [reduce using rule 43 (Expr)]
    NE          [reduce using rule 43 (Expr)]
    OR          [reduce using rule 43 (Expr)]
    PLUS        [reduce using rule 43 (Expr)]
    $default    reduce using rule 43 (Expr)

    optExpr  go to state 75


State 95

   16 optParamList: optParamList COMMA . ParameterDeclaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterDeclaration  go to state 103
    TypeSpec              go to state 38


State 96

   34 Statement: IF LPAR Expr . RPAR Statement optElse
   43 Expr: Expr . optExpr Expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 104

    optExpr  go to state 75


State 97

   35 Statement: WHILE LPAR Expr . RPAR Statement
   43 Expr: Expr . optExpr Expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 105

    optExpr  go to state 75


State 98

   36 Statement: RETURN optExp SEMI .

    $default  reduce using rule 36 (Statement)


State 99

   33 Statement: LBRACE optState RBRACE .

    $default  reduce using rule 33 (Statement)


State 100

   39 optState: optState Statement .

    $default  reduce using rule 39 (optState)


State 101

   72 optExpCExp: Expr optCExp .
   74 optCExp: optCExp . COMMA Expr

    COMMA  shift, and go to state 106

    $default  reduce using rule 72 (optExpCExp)


State 102

   70 optID: LPAR optExpCExp RPAR .

    $default  reduce using rule 70 (optID)


State 103

   16 optParamList: optParamList COMMA ParameterDeclaration .

    $default  reduce using rule 16 (optParamList)


State 104

   34 Statement: IF LPAR Expr RPAR . Statement optElse

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 38 (optExp)

    Statement  go to state 107
    optExp     go to state 47
    Expr       go to state 48


State 105

   35 Statement: WHILE LPAR Expr RPAR . Statement

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 38 (optExp)

    Statement  go to state 108
    optExp     go to state 47
    Expr       go to state 48


State 106

   74 optCExp: optCExp COMMA . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 109


State 107

   34 Statement: IF LPAR Expr RPAR Statement . optElse

    ELSE  shift, and go to state 110

    ELSE      [reduce using rule 42 (optElse)]
    $default  reduce using rule 42 (optElse)

    optElse  go to state 111


State 108

   35 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 35 (Statement)


State 109

   43 Expr: Expr . optExpr Expr
   74 optCExp: optCExp COMMA Expr .

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    $default  reduce using rule 74 (optCExp)

    optExpr  go to state 75


State 110

   41 optElse: ELSE . Statement

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    $default  reduce using rule 38 (optExp)

    Statement  go to state 112
    optExp     go to state 47
    Expr       go to state 48


State 111

   34 Statement: IF LPAR Expr RPAR Statement optElse .

    $default  reduce using rule 34 (Statement)


State 112

   41 optElse: ELSE Statement .

    $default  reduce using rule 41 (optElse)
