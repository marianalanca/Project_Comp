Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations
    2        | error Program

    3 FunctionsAndDeclarations: FunctionDefinition optFuncAndDec
    4                         | FunctionDeclaration optFuncAndDec
    5                         | Declaration optFuncAndDec

    6 optFuncAndDec: FunctionsAndDeclarations
    7              | %empty

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    9 FunctionBody: LBRACE optDecAndState RBRACE

   10 DeclarationsAndStatements: Statement optDecAndState
   11                          | Declaration optDecAndState

   12 optDecAndState: DeclarationsAndStatements
   13               | %empty

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   15 FunctionDeclarator: ID LPAR ParameterList RPAR

   16 ParameterList: ParameterDeclaration optParamList

   17 optParamList: optParamList COMMA ParameterDeclaration
   18             | %empty

   19 ParameterDeclaration: TypeSpec optParamDec

   20 optParamDec: ID
   21            | %empty

   22 Declaration: TypeSpec Declarator optDeclaration SEMI
   23            | error SEMI

   24 optDeclaration: optDeclaration COMMA Declarator
   25               | %empty

   26 TypeSpec: CHAR
   27         | INT
   28         | VOID
   29         | SHORT
   30         | DOUBLE

   31 Declarator: ID OptDeclarator

   32 OptDeclarator: ASSIGN Expr
   33              | %empty

   34 Statement: optExp
   35          | RETURN optExp
   36          | LBRACE optState RBRACE
   37          | IF LPAR Expr RPAR StatementError
   38          | IF LPAR Expr RPAR StatementError ELSE StatementError
   39          | WHILE LPAR Expr RPAR StatementError

   40 StatementError: error SEMI
   41               | Statement

   42 optExp: Expr SEMI
   43       | SEMI

   44 optState: StatementError optState
   45         | error
   46         | %empty

   47 Expr: Expr ASSIGN Expr
   48     | Expr COMMA Expr
   49     | LPAR error RPAR
   50     | ID LPAR error RPAR
   51     | Expr PLUS Expr
   52     | Expr MINUS Expr
   53     | Expr MUL Expr
   54     | Expr DIV Expr
   55     | Expr MOD Expr
   56     | Expr OR Expr
   57     | Expr AND Expr
   58     | Expr BITWISEAND Expr
   59     | Expr BITWISEOR Expr
   60     | Expr BITWISEXOR Expr
   61     | Expr EQ Expr
   62     | Expr NE Expr
   63     | Expr LE Expr
   64     | Expr GE Expr
   65     | Expr LT Expr
   66     | Expr GT Expr
   67     | PLUS Expr
   68     | MINUS Expr
   69     | NOT Expr
   70     | ID LPAR RPAR
   71     | ID LPAR optExpCExp RPAR
   72     | ID
   73     | INTLIT
   74     | CHRLIT
   75     | REALLIT
   76     | LPAR Expr RPAR

   77 optExpCExp: Expr optCExp

   78 optCExp: optCExp COMMA Expr
   79        | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256) 2 23 40 45 49 50
    CHAR (258) 26
    ELSE (259) 38
    IF (260) 37 38
    WHILE (261) 39
    INT (262) 27
    DOUBLE (263) 30
    SHORT (264) 29
    RETURN (265) 35
    VOID (266) 28
    BITWISEAND (267) 58
    BITWISEOR (268) 59
    BITWISEXOR (269) 60
    AND (270) 57
    ASSIGN (271) 32 47
    MUL (272) 53
    COMMA (273) 17 24 48 78
    DIV (274) 54
    EQ (275) 61
    GE (276) 64
    GT (277) 66
    LBRACE (278) 9 36
    LE (279) 63
    LPAR (280) 15 37 38 39 49 50 70 71 76
    LT (281) 65
    MINUS (282) 52 68
    MOD (283) 55
    NE (284) 62
    NOT (285) 69
    OR (286) 56
    PLUS (287) 51 67
    RBRACE (288) 9 36
    RPAR (289) 15 37 38 39 49 50 70 71 76
    SEMI (290) 14 22 23 40 42 43
    CHRLIT <id> (291) 74
    ID <id> (292) 15 20 31 50 70 71 72
    INTLIT <id> (293) 73
    REALLIT <id> (294) 75
    RESERVED <id> (295)
    IFX (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    Program <node> (43)
        on left: 1 2
        on right: 0 2
    FunctionsAndDeclarations <node> (44)
        on left: 3 4 5
        on right: 1 6
    optFuncAndDec <node> (45)
        on left: 6 7
        on right: 3 4 5
    FunctionDefinition <node> (46)
        on left: 8
        on right: 3
    FunctionBody <node> (47)
        on left: 9
        on right: 8
    DeclarationsAndStatements <node> (48)
        on left: 10 11
        on right: 12
    optDecAndState <node> (49)
        on left: 12 13
        on right: 9 10 11
    FunctionDeclaration <node> (50)
        on left: 14
        on right: 4
    FunctionDeclarator <node> (51)
        on left: 15
        on right: 8 14
    ParameterList <node> (52)
        on left: 16
        on right: 15
    optParamList <node> (53)
        on left: 17 18
        on right: 16 17
    ParameterDeclaration <node> (54)
        on left: 19
        on right: 16 17
    optParamDec <node> (55)
        on left: 20 21
        on right: 19
    Declaration <node> (56)
        on left: 22 23
        on right: 5 11
    optDeclaration <node> (57)
        on left: 24 25
        on right: 22 24
    TypeSpec <node> (58)
        on left: 26 27 28 29 30
        on right: 8 14 19 22
    Declarator <node> (59)
        on left: 31
        on right: 22 24
    OptDeclarator <node> (60)
        on left: 32 33
        on right: 31
    Statement <node> (61)
        on left: 34 35 36 37 38 39
        on right: 10 41
    StatementError <node> (62)
        on left: 40 41
        on right: 37 38 39 44
    optExp <node> (63)
        on left: 42 43
        on right: 34 35
    optState <node> (64)
        on left: 44 45 46
        on right: 36 44
    Expr <node> (65)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
        on right: 32 37 38 39 42 47 48 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 76 77 78
    optExpCExp <node> (66)
        on left: 77
        on right: 71
    optCExp <node> (67)
        on left: 78 79
        on right: 77 78


State 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    SHORT   shift, and go to state 5
    VOID    shift, and go to state 6

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

    2 Program: error . Program
   23 Declaration: error . SEMI

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    SHORT   shift, and go to state 5
    VOID    shift, and go to state 6
    SEMI    shift, and go to state 13

    Program                   go to state 14
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 2

   26 TypeSpec: CHAR .

    $default  reduce using rule 26 (TypeSpec)


State 3

   27 TypeSpec: INT .

    $default  reduce using rule 27 (TypeSpec)


State 4

   30 TypeSpec: DOUBLE .

    $default  reduce using rule 30 (TypeSpec)


State 5

   29 TypeSpec: SHORT .

    $default  reduce using rule 29 (TypeSpec)


State 6

   28 TypeSpec: VOID .

    $default  reduce using rule 28 (TypeSpec)


State 7

    0 $accept: Program . $end

    $end  shift, and go to state 15


State 8

    1 Program: FunctionsAndDeclarations .

    $default  reduce using rule 1 (Program)


State 9

    3 FunctionsAndDeclarations: FunctionDefinition . optFuncAndDec

    error   shift, and go to state 16
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    SHORT   shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 7 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 17
    optFuncAndDec             go to state 18
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 10

    4 FunctionsAndDeclarations: FunctionDeclaration . optFuncAndDec

    error   shift, and go to state 16
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    SHORT   shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 7 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 17
    optFuncAndDec             go to state 19
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 11

    5 FunctionsAndDeclarations: Declaration . optFuncAndDec

    error   shift, and go to state 16
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    SHORT   shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 7 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 17
    optFuncAndDec             go to state 20
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 12

    8 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   14 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   22 Declaration: TypeSpec . Declarator optDeclaration SEMI

    ID  shift, and go to state 21

    FunctionDeclarator  go to state 22
    Declarator          go to state 23


State 13

   23 Declaration: error SEMI .

    $default  reduce using rule 23 (Declaration)


State 14

    2 Program: error Program .

    $default  reduce using rule 2 (Program)


State 15

    0 $accept: Program $end .

    $default  accept


State 16

   23 Declaration: error . SEMI

    SEMI  shift, and go to state 13


State 17

    6 optFuncAndDec: FunctionsAndDeclarations .

    $default  reduce using rule 6 (optFuncAndDec)


State 18

    3 FunctionsAndDeclarations: FunctionDefinition optFuncAndDec .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 19

    4 FunctionsAndDeclarations: FunctionDeclaration optFuncAndDec .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 20

    5 FunctionsAndDeclarations: Declaration optFuncAndDec .

    $default  reduce using rule 5 (FunctionsAndDeclarations)


State 21

   15 FunctionDeclarator: ID . LPAR ParameterList RPAR
   31 Declarator: ID . OptDeclarator

    ASSIGN  shift, and go to state 24
    LPAR    shift, and go to state 25

    $default  reduce using rule 33 (OptDeclarator)

    OptDeclarator  go to state 26


State 22

    8 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   14 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 27
    SEMI    shift, and go to state 28

    FunctionBody  go to state 29


State 23

   22 Declaration: TypeSpec Declarator . optDeclaration SEMI

    $default  reduce using rule 25 (optDeclaration)

    optDeclaration  go to state 30


State 24

   32 OptDeclarator: ASSIGN . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 39


State 25

   15 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    SHORT   shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 40
    ParameterDeclaration  go to state 41
    TypeSpec              go to state 42


State 26

   31 Declarator: ID OptDeclarator .

    $default  reduce using rule 31 (Declarator)


State 27

    9 FunctionBody: LBRACE . optDecAndState RBRACE

    error    shift, and go to state 16
    CHAR     shift, and go to state 2
    IF       shift, and go to state 43
    WHILE    shift, and go to state 44
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    SHORT    shift, and go to state 5
    RETURN   shift, and go to state 45
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 46
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    RBRACE  reduce using rule 13 (optDecAndState)

    DeclarationsAndStatements  go to state 48
    optDecAndState             go to state 49
    Declaration                go to state 50
    TypeSpec                   go to state 51
    Statement                  go to state 52
    optExp                     go to state 53
    Expr                       go to state 54


State 28

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 14 (FunctionDeclaration)


State 29

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 8 (FunctionDefinition)


State 30

   22 Declaration: TypeSpec Declarator optDeclaration . SEMI
   24 optDeclaration: optDeclaration . COMMA Declarator

    COMMA  shift, and go to state 55
    SEMI   shift, and go to state 56


State 31

   49 Expr: LPAR . error RPAR
   76     | LPAR . Expr RPAR

    error    shift, and go to state 57
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 58


State 32

   68 Expr: MINUS . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 59


State 33

   69 Expr: NOT . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 60


State 34

   67 Expr: PLUS . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 61


State 35

   74 Expr: CHRLIT .

    $default  reduce using rule 74 (Expr)


State 36

   50 Expr: ID . LPAR error RPAR
   70     | ID . LPAR RPAR
   71     | ID . LPAR optExpCExp RPAR
   72     | ID .

    LPAR  shift, and go to state 62

    $default  reduce using rule 72 (Expr)


State 37

   73 Expr: INTLIT .

    $default  reduce using rule 73 (Expr)


State 38

   75 Expr: REALLIT .

    $default  reduce using rule 75 (Expr)


State 39

   32 OptDeclarator: ASSIGN Expr .
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 32 (OptDeclarator)


State 40

   15 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 81


State 41

   16 ParameterList: ParameterDeclaration . optParamList

    $default  reduce using rule 18 (optParamList)

    optParamList  go to state 82


State 42

   19 ParameterDeclaration: TypeSpec . optParamDec

    ID  shift, and go to state 83

    $default  reduce using rule 21 (optParamDec)

    optParamDec  go to state 84


State 43

   37 Statement: IF . LPAR Expr RPAR StatementError
   38          | IF . LPAR Expr RPAR StatementError ELSE StatementError

    LPAR  shift, and go to state 85


State 44

   39 Statement: WHILE . LPAR Expr RPAR StatementError

    LPAR  shift, and go to state 86


State 45

   35 Statement: RETURN . optExp

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    optExp  go to state 87
    Expr    go to state 54


State 46

   36 Statement: LBRACE . optState RBRACE

    error    shift, and go to state 88
    IF       shift, and go to state 43
    WHILE    shift, and go to state 44
    RETURN   shift, and go to state 45
    LBRACE   shift, and go to state 46
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    RBRACE  reduce using rule 46 (optState)

    Statement       go to state 89
    StatementError  go to state 90
    optExp          go to state 53
    optState        go to state 91
    Expr            go to state 54


State 47

   43 optExp: SEMI .

    $default  reduce using rule 43 (optExp)


State 48

   12 optDecAndState: DeclarationsAndStatements .

    $default  reduce using rule 12 (optDecAndState)


State 49

    9 FunctionBody: LBRACE optDecAndState . RBRACE

    RBRACE  shift, and go to state 92


State 50

   11 DeclarationsAndStatements: Declaration . optDecAndState

    error    shift, and go to state 16
    CHAR     shift, and go to state 2
    IF       shift, and go to state 43
    WHILE    shift, and go to state 44
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    SHORT    shift, and go to state 5
    RETURN   shift, and go to state 45
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 46
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    RBRACE  reduce using rule 13 (optDecAndState)

    DeclarationsAndStatements  go to state 48
    optDecAndState             go to state 93
    Declaration                go to state 50
    TypeSpec                   go to state 51
    Statement                  go to state 52
    optExp                     go to state 53
    Expr                       go to state 54


State 51

   22 Declaration: TypeSpec . Declarator optDeclaration SEMI

    ID  shift, and go to state 94

    Declarator  go to state 23


State 52

   10 DeclarationsAndStatements: Statement . optDecAndState

    error    shift, and go to state 16
    CHAR     shift, and go to state 2
    IF       shift, and go to state 43
    WHILE    shift, and go to state 44
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    SHORT    shift, and go to state 5
    RETURN   shift, and go to state 45
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 46
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    RBRACE  reduce using rule 13 (optDecAndState)

    DeclarationsAndStatements  go to state 48
    optDecAndState             go to state 95
    Declaration                go to state 50
    TypeSpec                   go to state 51
    Statement                  go to state 52
    optExp                     go to state 53
    Expr                       go to state 54


State 53

   34 Statement: optExp .

    $default  reduce using rule 34 (Statement)


State 54

   42 optExp: Expr . SEMI
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    SEMI        shift, and go to state 96


State 55

   24 optDeclaration: optDeclaration COMMA . Declarator

    ID  shift, and go to state 94

    Declarator  go to state 97


State 56

   22 Declaration: TypeSpec Declarator optDeclaration SEMI .

    $default  reduce using rule 22 (Declaration)


State 57

   49 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 98


State 58

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   76     | LPAR Expr . RPAR

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    RPAR        shift, and go to state 99


State 59

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   68     | MINUS Expr .

    MUL  shift, and go to state 68
    DIV  shift, and go to state 70
    MOD  shift, and go to state 77

    $default  reduce using rule 68 (Expr)


State 60

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   69     | NOT Expr .

    $default  reduce using rule 69 (Expr)


State 61

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | PLUS Expr .

    MUL  shift, and go to state 68
    DIV  shift, and go to state 70
    MOD  shift, and go to state 77

    $default  reduce using rule 67 (Expr)


State 62

   50 Expr: ID LPAR . error RPAR
   70     | ID LPAR . RPAR
   71     | ID LPAR . optExpCExp RPAR

    error    shift, and go to state 100
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    RPAR     shift, and go to state 101
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr        go to state 102
    optExpCExp  go to state 103


State 63

   58 Expr: Expr BITWISEAND . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 104


State 64

   59 Expr: Expr BITWISEOR . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 105


State 65

   60 Expr: Expr BITWISEXOR . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 106


State 66

   57 Expr: Expr AND . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 107


State 67

   47 Expr: Expr ASSIGN . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 108


State 68

   53 Expr: Expr MUL . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 109


State 69

   48 Expr: Expr COMMA . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 110


State 70

   54 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 111


State 71

   61 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 112


State 72

   64 Expr: Expr GE . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 113


State 73

   66 Expr: Expr GT . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 114


State 74

   63 Expr: Expr LE . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 115


State 75

   65 Expr: Expr LT . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 116


State 76

   52 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 117


State 77

   55 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 118


State 78

   62 Expr: Expr NE . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 119


State 79

   56 Expr: Expr OR . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 120


State 80

   51 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 121


State 81

   15 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 15 (FunctionDeclarator)


State 82

   16 ParameterList: ParameterDeclaration optParamList .
   17 optParamList: optParamList . COMMA ParameterDeclaration

    COMMA  shift, and go to state 122

    $default  reduce using rule 16 (ParameterList)


State 83

   20 optParamDec: ID .

    $default  reduce using rule 20 (optParamDec)


State 84

   19 ParameterDeclaration: TypeSpec optParamDec .

    $default  reduce using rule 19 (ParameterDeclaration)


State 85

   37 Statement: IF LPAR . Expr RPAR StatementError
   38          | IF LPAR . Expr RPAR StatementError ELSE StatementError

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 123


State 86

   39 Statement: WHILE LPAR . Expr RPAR StatementError

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 124


State 87

   35 Statement: RETURN optExp .

    $default  reduce using rule 35 (Statement)


State 88

   40 StatementError: error . SEMI
   45 optState: error .

    SEMI  shift, and go to state 125

    $default  reduce using rule 45 (optState)


State 89

   41 StatementError: Statement .

    $default  reduce using rule 41 (StatementError)


State 90

   44 optState: StatementError . optState

    error    shift, and go to state 88
    IF       shift, and go to state 43
    WHILE    shift, and go to state 44
    RETURN   shift, and go to state 45
    LBRACE   shift, and go to state 46
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    RBRACE  reduce using rule 46 (optState)

    Statement       go to state 89
    StatementError  go to state 90
    optExp          go to state 53
    optState        go to state 126
    Expr            go to state 54


State 91

   36 Statement: LBRACE optState . RBRACE

    RBRACE  shift, and go to state 127


State 92

    9 FunctionBody: LBRACE optDecAndState RBRACE .

    $default  reduce using rule 9 (FunctionBody)


State 93

   11 DeclarationsAndStatements: Declaration optDecAndState .

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 94

   31 Declarator: ID . OptDeclarator

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 33 (OptDeclarator)

    OptDeclarator  go to state 26


State 95

   10 DeclarationsAndStatements: Statement optDecAndState .

    $default  reduce using rule 10 (DeclarationsAndStatements)


State 96

   42 optExp: Expr SEMI .

    $default  reduce using rule 42 (optExp)


State 97

   24 optDeclaration: optDeclaration COMMA Declarator .

    $default  reduce using rule 24 (optDeclaration)


State 98

   49 Expr: LPAR error RPAR .

    $default  reduce using rule 49 (Expr)


State 99

   76 Expr: LPAR Expr RPAR .

    $default  reduce using rule 76 (Expr)


State 100

   50 Expr: ID LPAR error . RPAR

    RPAR  shift, and go to state 128


State 101

   70 Expr: ID LPAR RPAR .

    $default  reduce using rule 70 (Expr)


State 102

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   77 optExpCExp: Expr . optCExp

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 79 (optCExp)

    optCExp  go to state 129


State 103

   71 Expr: ID LPAR optExpCExp . RPAR

    RPAR  shift, and go to state 130


State 104

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   58     | Expr BITWISEAND Expr .
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    EQ     shift, and go to state 71
    GE     shift, and go to state 72
    GT     shift, and go to state 73
    LE     shift, and go to state 74
    LT     shift, and go to state 75
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    NE     shift, and go to state 78
    PLUS   shift, and go to state 80

    $default  reduce using rule 58 (Expr)


State 105

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   59     | Expr BITWISEOR Expr .
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 65
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    PLUS        shift, and go to state 80

    $default  reduce using rule 59 (Expr)


State 106

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   60     | Expr BITWISEXOR Expr .
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    PLUS        shift, and go to state 80

    $default  reduce using rule 60 (Expr)


State 107

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   57     | Expr AND Expr .
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    PLUS        shift, and go to state 80

    $default  reduce using rule 57 (Expr)


State 108

   47 Expr: Expr . ASSIGN Expr
   47     | Expr ASSIGN Expr .
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 47 (Expr)


State 109

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   53     | Expr MUL Expr .
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    $default  reduce using rule 53 (Expr)


State 110

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   48     | Expr COMMA Expr .
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 48 (Expr)


State 111

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   54     | Expr DIV Expr .
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    $default  reduce using rule 54 (Expr)


State 112

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   61     | Expr EQ Expr .
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    GE     shift, and go to state 72
    GT     shift, and go to state 73
    LE     shift, and go to state 74
    LT     shift, and go to state 75
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 61 (Expr)


State 113

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   64     | Expr GE Expr .
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 64 (Expr)


State 114

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   66     | Expr GT Expr .

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 66 (Expr)


State 115

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   63     | Expr LE Expr .
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 63 (Expr)


State 116

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   65     | Expr LT Expr .
   66     | Expr . GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 65 (Expr)


State 117

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   52     | Expr MINUS Expr .
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    MUL  shift, and go to state 68
    DIV  shift, and go to state 70
    MOD  shift, and go to state 77

    $default  reduce using rule 52 (Expr)


State 118

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   55     | Expr MOD Expr .
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    $default  reduce using rule 55 (Expr)


State 119

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   62     | Expr NE Expr .
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    GE     shift, and go to state 72
    GT     shift, and go to state 73
    LE     shift, and go to state 74
    LT     shift, and go to state 75
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 62 (Expr)


State 120

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   56     | Expr OR Expr .
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    PLUS        shift, and go to state 80

    $default  reduce using rule 56 (Expr)


State 121

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   51     | Expr PLUS Expr .
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    MUL  shift, and go to state 68
    DIV  shift, and go to state 70
    MOD  shift, and go to state 77

    $default  reduce using rule 51 (Expr)


State 122

   17 optParamList: optParamList COMMA . ParameterDeclaration

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    SHORT   shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 131
    TypeSpec              go to state 42


State 123

   37 Statement: IF LPAR Expr . RPAR StatementError
   38          | IF LPAR Expr . RPAR StatementError ELSE StatementError
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    RPAR        shift, and go to state 132


State 124

   39 Statement: WHILE LPAR Expr . RPAR StatementError
   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    RPAR        shift, and go to state 133


State 125

   40 StatementError: error SEMI .

    $default  reduce using rule 40 (StatementError)


State 126

   44 optState: StatementError optState .

    $default  reduce using rule 44 (optState)


State 127

   36 Statement: LBRACE optState RBRACE .

    $default  reduce using rule 36 (Statement)


State 128

   50 Expr: ID LPAR error RPAR .

    $default  reduce using rule 50 (Expr)


State 129

   77 optExpCExp: Expr optCExp .
   78 optCExp: optCExp . COMMA Expr

    COMMA  shift, and go to state 134

    $default  reduce using rule 77 (optExpCExp)


State 130

   71 Expr: ID LPAR optExpCExp RPAR .

    $default  reduce using rule 71 (Expr)


State 131

   17 optParamList: optParamList COMMA ParameterDeclaration .

    $default  reduce using rule 17 (optParamList)


State 132

   37 Statement: IF LPAR Expr RPAR . StatementError
   38          | IF LPAR Expr RPAR . StatementError ELSE StatementError

    error    shift, and go to state 135
    IF       shift, and go to state 43
    WHILE    shift, and go to state 44
    RETURN   shift, and go to state 45
    LBRACE   shift, and go to state 46
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Statement       go to state 89
    StatementError  go to state 136
    optExp          go to state 53
    Expr            go to state 54


State 133

   39 Statement: WHILE LPAR Expr RPAR . StatementError

    error    shift, and go to state 135
    IF       shift, and go to state 43
    WHILE    shift, and go to state 44
    RETURN   shift, and go to state 45
    LBRACE   shift, and go to state 46
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Statement       go to state 89
    StatementError  go to state 137
    optExp          go to state 53
    Expr            go to state 54


State 134

   78 optCExp: optCExp COMMA . Expr

    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Expr  go to state 138


State 135

   40 StatementError: error . SEMI

    SEMI  shift, and go to state 125


State 136

   37 Statement: IF LPAR Expr RPAR StatementError .
   38          | IF LPAR Expr RPAR StatementError . ELSE StatementError

    ELSE  shift, and go to state 139

    $default  reduce using rule 37 (Statement)


State 137

   39 Statement: WHILE LPAR Expr RPAR StatementError .

    $default  reduce using rule 39 (Statement)


State 138

   47 Expr: Expr . ASSIGN Expr
   48     | Expr . COMMA Expr
   51     | Expr . PLUS Expr
   52     | Expr . MINUS Expr
   53     | Expr . MUL Expr
   54     | Expr . DIV Expr
   55     | Expr . MOD Expr
   56     | Expr . OR Expr
   57     | Expr . AND Expr
   58     | Expr . BITWISEAND Expr
   59     | Expr . BITWISEOR Expr
   60     | Expr . BITWISEXOR Expr
   61     | Expr . EQ Expr
   62     | Expr . NE Expr
   63     | Expr . LE Expr
   64     | Expr . GE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   78 optCExp: optCExp COMMA Expr .

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 78 (optCExp)


State 139

   38 Statement: IF LPAR Expr RPAR StatementError ELSE . StatementError

    error    shift, and go to state 135
    IF       shift, and go to state 43
    WHILE    shift, and go to state 44
    RETURN   shift, and go to state 45
    LBRACE   shift, and go to state 46
    LPAR     shift, and go to state 31
    MINUS    shift, and go to state 32
    NOT      shift, and go to state 33
    PLUS     shift, and go to state 34
    SEMI     shift, and go to state 47
    CHRLIT   shift, and go to state 35
    ID       shift, and go to state 36
    INTLIT   shift, and go to state 37
    REALLIT  shift, and go to state 38

    Statement       go to state 89
    StatementError  go to state 140
    optExp          go to state 53
    Expr            go to state 54


State 140

   38 Statement: IF LPAR Expr RPAR StatementError ELSE StatementError .

    $default  reduce using rule 38 (Statement)
