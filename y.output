Terminals unused in grammar

    RESERVED


State 134 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition optFuncAndDec
    3                         | FunctionDeclaration optFuncAndDec
    4                         | Declaration optFuncAndDec

    5 optFuncAndDec: FunctionsAndDeclarations
    6              | %empty

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE optDecAndState RBRACE

    9 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   10 DeclarationsAndStatements: Statement optDecAndState
   11                          | Declaration optDecAndState
   12                          | error SEMI optDecAndState

   13 optDecAndState: DeclarationsAndStatements
   14               | %empty

   15 FunctionDeclarator: ID LPAR ParameterList RPAR

   16 ParameterList: ParameterDeclaration optParamList

   17 optParamList: optParamList COMMA ParameterDeclaration
   18             | %empty

   19 ParameterDeclaration: TypeSpec optParamDec

   20 optParamDec: ID
   21            | %empty

   22 Declaration: TypeSpec Declarator optDeclaration SEMI

   23 optDeclaration: optDeclaration COMMA Declarator
   24               | %empty

   25 TypeSpec: CHAR
   26         | INT
   27         | VOID
   28         | SHORT
   29         | DOUBLE

   30 Declarator: ID OptDeclarator

   31 OptDeclarator: ASSIGN Expr
   32              | %empty

   33 Statement: optExp
   34          | RETURN optExp
   35          | LBRACE optState RBRACE
   36          | IF LPAR Expr RPAR StatementError optElse
   37          | WHILE LPAR Expr RPAR StatementError

   38 StatementError: error SEMI
   39               | Statement

   40 optExp: Expr SEMI
   41       | SEMI

   42 optState: StatementError optState
   43         | error
   44         | %empty

   45 optElse: ELSE StatementError
   46        | %empty

   47 Expr: PLUS Expr
   48     | MINUS Expr
   49     | NOT Expr
   50     | ID optID
   51     | INTLIT
   52     | CHRLIT
   53     | REALLIT
   54     | LPAR optLparRpar RPAR
   55     | Expr ASSIGN Expr
   56     | Expr COMMA Expr
   57     | Expr PLUS Expr
   58     | Expr MINUS Expr
   59     | Expr MUL Expr
   60     | Expr DIV Expr
   61     | Expr MOD Expr
   62     | Expr OR Expr
   63     | Expr AND Expr
   64     | Expr BITWISEAND Expr
   65     | Expr BITWISEOR Expr
   66     | Expr BITWISEXOR Expr
   67     | Expr EQ Expr
   68     | Expr NE Expr
   69     | Expr LE Expr
   70     | Expr GE Expr
   71     | Expr LT Expr
   72     | Expr GT Expr

   73 optLparRpar: Expr
   74            | error

   75 optID: LPAR optExpCExp RPAR
   76      | %empty

   77 optExpCExp: Expr optCExp
   78           | error
   79           | %empty

   80 optCExp: optCExp COMMA Expr
   81        | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256) 12 38 43 74 78
    CHAR (258) 25
    ELSE (259) 45
    IF (260) 36
    WHILE (261) 37
    INT (262) 26
    DOUBLE (263) 29
    SHORT (264) 28
    RETURN (265) 34
    VOID (266) 27
    BITWISEAND (267) 64
    BITWISEOR (268) 65
    BITWISEXOR (269) 66
    AND (270) 63
    ASSIGN (271) 31 55
    MUL (272) 59
    COMMA (273) 17 23 56 80
    DIV (274) 60
    EQ (275) 67
    GE (276) 70
    GT (277) 72
    LBRACE (278) 8 35
    LE (279) 69
    LPAR (280) 15 36 37 54 75
    LT (281) 71
    MINUS (282) 48 58
    MOD (283) 61
    NE (284) 68
    NOT (285) 49
    OR (286) 62
    PLUS (287) 47 57
    RBRACE (288) 8 35
    RPAR (289) 15 36 37 54 75
    SEMI (290) 9 12 22 38 40 41
    CHRLIT <id> (291) 52
    ID <id> (292) 15 20 30 50
    INTLIT <id> (293) 51
    REALLIT <id> (294) 53
    RESERVED <id> (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    Program <node> (42)
        on left: 1
        on right: 0
    FunctionsAndDeclarations <node> (43)
        on left: 2 3 4
        on right: 1 5
    optFuncAndDec <node> (44)
        on left: 5 6
        on right: 2 3 4
    FunctionDefinition <node> (45)
        on left: 7
        on right: 2
    FunctionBody <node> (46)
        on left: 8
        on right: 7
    FunctionDeclaration <node> (47)
        on left: 9
        on right: 3
    DeclarationsAndStatements <node> (48)
        on left: 10 11 12
        on right: 13
    optDecAndState <node> (49)
        on left: 13 14
        on right: 8 10 11 12
    FunctionDeclarator <node> (50)
        on left: 15
        on right: 7 9
    ParameterList <node> (51)
        on left: 16
        on right: 15
    optParamList <node> (52)
        on left: 17 18
        on right: 16 17
    ParameterDeclaration <node> (53)
        on left: 19
        on right: 16 17
    optParamDec <node> (54)
        on left: 20 21
        on right: 19
    Declaration <node> (55)
        on left: 22
        on right: 4 11
    optDeclaration <node> (56)
        on left: 23 24
        on right: 22 23
    TypeSpec <node> (57)
        on left: 25 26 27 28 29
        on right: 7 9 19 22
    Declarator <node> (58)
        on left: 30
        on right: 22 23
    OptDeclarator <node> (59)
        on left: 31 32
        on right: 30
    Statement <node> (60)
        on left: 33 34 35 36 37
        on right: 10 39
    StatementError <node> (61)
        on left: 38 39
        on right: 36 37 42 45
    optExp <node> (62)
        on left: 40 41
        on right: 33 34
    optState <node> (63)
        on left: 42 43 44
        on right: 35 42
    optElse <node> (64)
        on left: 45 46
        on right: 36
    Expr <node> (65)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
        on right: 31 36 37 40 47 48 49 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 77 80
    optLparRpar <node> (66)
        on left: 73 74
        on right: 54
    optID <node> (67)
        on left: 75 76
        on right: 50
    optExpCExp <node> (68)
        on left: 77 78 79
        on right: 75
    optCExp <node> (69)
        on left: 80 81
        on right: 77 80


State 0

    0 $accept: . Program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    Program                   go to state 6
    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 1

   25 TypeSpec: CHAR .

    $default  reduce using rule 25 (TypeSpec)


State 2

   26 TypeSpec: INT .

    $default  reduce using rule 26 (TypeSpec)


State 3

   29 TypeSpec: DOUBLE .

    $default  reduce using rule 29 (TypeSpec)


State 4

   28 TypeSpec: SHORT .

    $default  reduce using rule 28 (TypeSpec)


State 5

   27 TypeSpec: VOID .

    $default  reduce using rule 27 (TypeSpec)


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 7

    1 Program: FunctionsAndDeclarations .

    $default  reduce using rule 1 (Program)


State 8

    2 FunctionsAndDeclarations: FunctionDefinition . optFuncAndDec

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 6 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 13
    optFuncAndDec             go to state 14
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 9

    3 FunctionsAndDeclarations: FunctionDeclaration . optFuncAndDec

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 6 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 13
    optFuncAndDec             go to state 15
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 10

    4 FunctionsAndDeclarations: Declaration . optFuncAndDec

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 6 (optFuncAndDec)

    FunctionsAndDeclarations  go to state 13
    optFuncAndDec             go to state 16
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 11

    7 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
    9 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   22 Declaration: TypeSpec . Declarator optDeclaration SEMI

    ID  shift, and go to state 17

    FunctionDeclarator  go to state 18
    Declarator          go to state 19


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    5 optFuncAndDec: FunctionsAndDeclarations .

    $default  reduce using rule 5 (optFuncAndDec)


State 14

    2 FunctionsAndDeclarations: FunctionDefinition optFuncAndDec .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 15

    3 FunctionsAndDeclarations: FunctionDeclaration optFuncAndDec .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 16

    4 FunctionsAndDeclarations: Declaration optFuncAndDec .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 17

   15 FunctionDeclarator: ID . LPAR ParameterList RPAR
   30 Declarator: ID . OptDeclarator

    ASSIGN  shift, and go to state 20
    LPAR    shift, and go to state 21

    $default  reduce using rule 32 (OptDeclarator)

    OptDeclarator  go to state 22


State 18

    7 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
    9 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 19

   22 Declaration: TypeSpec Declarator . optDeclaration SEMI

    $default  reduce using rule 24 (optDeclaration)

    optDeclaration  go to state 26


State 20

   31 OptDeclarator: ASSIGN . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 35


State 21

   15 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterList         go to state 36
    ParameterDeclaration  go to state 37
    TypeSpec              go to state 38


State 22

   30 Declarator: ID OptDeclarator .

    $default  reduce using rule 30 (Declarator)


State 23

    8 FunctionBody: LBRACE . optDecAndState RBRACE

    error    shift, and go to state 39
    CHAR     shift, and go to state 1
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    SHORT    shift, and go to state 4
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    RBRACE  reduce using rule 14 (optDecAndState)

    DeclarationsAndStatements  go to state 45
    optDecAndState             go to state 46
    Declaration                go to state 47
    TypeSpec                   go to state 48
    Statement                  go to state 49
    optExp                     go to state 50
    Expr                       go to state 51


State 24

    9 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 9 (FunctionDeclaration)


State 25

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 7 (FunctionDefinition)


State 26

   22 Declaration: TypeSpec Declarator optDeclaration . SEMI
   23 optDeclaration: optDeclaration . COMMA Declarator

    COMMA  shift, and go to state 52
    SEMI   shift, and go to state 53


State 27

   54 Expr: LPAR . optLparRpar RPAR

    error    shift, and go to state 54
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr         go to state 55
    optLparRpar  go to state 56


State 28

   48 Expr: MINUS . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 57


State 29

   49 Expr: NOT . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 58


State 30

   47 Expr: PLUS . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 59


State 31

   52 Expr: CHRLIT .

    $default  reduce using rule 52 (Expr)


State 32

   50 Expr: ID . optID

    LPAR  shift, and go to state 60

    $default  reduce using rule 76 (optID)

    optID  go to state 61


State 33

   51 Expr: INTLIT .

    $default  reduce using rule 51 (Expr)


State 34

   53 Expr: REALLIT .

    $default  reduce using rule 53 (Expr)


State 35

   31 OptDeclarator: ASSIGN Expr .
   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 31 (OptDeclarator)


State 36

   15 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 80


State 37

   16 ParameterList: ParameterDeclaration . optParamList

    $default  reduce using rule 18 (optParamList)

    optParamList  go to state 81


State 38

   19 ParameterDeclaration: TypeSpec . optParamDec

    ID  shift, and go to state 82

    $default  reduce using rule 21 (optParamDec)

    optParamDec  go to state 83


State 39

   12 DeclarationsAndStatements: error . SEMI optDecAndState

    SEMI  shift, and go to state 84


State 40

   36 Statement: IF . LPAR Expr RPAR StatementError optElse

    LPAR  shift, and go to state 85


State 41

   37 Statement: WHILE . LPAR Expr RPAR StatementError

    LPAR  shift, and go to state 86


State 42

   34 Statement: RETURN . optExp

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    optExp  go to state 87
    Expr    go to state 51


State 43

   35 Statement: LBRACE . optState RBRACE

    error    shift, and go to state 88
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    RBRACE  reduce using rule 44 (optState)

    Statement       go to state 89
    StatementError  go to state 90
    optExp          go to state 50
    optState        go to state 91
    Expr            go to state 51


State 44

   41 optExp: SEMI .

    $default  reduce using rule 41 (optExp)


State 45

   13 optDecAndState: DeclarationsAndStatements .

    $default  reduce using rule 13 (optDecAndState)


State 46

    8 FunctionBody: LBRACE optDecAndState . RBRACE

    RBRACE  shift, and go to state 92


State 47

   11 DeclarationsAndStatements: Declaration . optDecAndState

    error    shift, and go to state 39
    CHAR     shift, and go to state 1
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    SHORT    shift, and go to state 4
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    RBRACE  reduce using rule 14 (optDecAndState)

    DeclarationsAndStatements  go to state 45
    optDecAndState             go to state 93
    Declaration                go to state 47
    TypeSpec                   go to state 48
    Statement                  go to state 49
    optExp                     go to state 50
    Expr                       go to state 51


State 48

   22 Declaration: TypeSpec . Declarator optDeclaration SEMI

    ID  shift, and go to state 94

    Declarator  go to state 19


State 49

   10 DeclarationsAndStatements: Statement . optDecAndState

    error    shift, and go to state 39
    CHAR     shift, and go to state 1
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    SHORT    shift, and go to state 4
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    RBRACE  reduce using rule 14 (optDecAndState)

    DeclarationsAndStatements  go to state 45
    optDecAndState             go to state 95
    Declaration                go to state 47
    TypeSpec                   go to state 48
    Statement                  go to state 49
    optExp                     go to state 50
    Expr                       go to state 51


State 50

   33 Statement: optExp .

    $default  reduce using rule 33 (Statement)


State 51

   40 optExp: Expr . SEMI
   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    SEMI        shift, and go to state 96


State 52

   23 optDeclaration: optDeclaration COMMA . Declarator

    ID  shift, and go to state 94

    Declarator  go to state 97


State 53

   22 Declaration: TypeSpec Declarator optDeclaration SEMI .

    $default  reduce using rule 22 (Declaration)


State 54

   74 optLparRpar: error .

    $default  reduce using rule 74 (optLparRpar)


State 55

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73 optLparRpar: Expr .

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 73 (optLparRpar)


State 56

   54 Expr: LPAR optLparRpar . RPAR

    RPAR  shift, and go to state 98


State 57

   48 Expr: MINUS Expr .
   55     | Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 69
    MOD  shift, and go to state 76

    $default  reduce using rule 48 (Expr)


State 58

   49 Expr: NOT Expr .
   55     | Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    $default  reduce using rule 49 (Expr)


State 59

   47 Expr: PLUS Expr .
   55     | Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 69
    MOD  shift, and go to state 76

    $default  reduce using rule 47 (Expr)


State 60

   75 optID: LPAR . optExpCExp RPAR

    error    shift, and go to state 99
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    RPAR  reduce using rule 79 (optExpCExp)

    Expr        go to state 100
    optExpCExp  go to state 101


State 61

   50 Expr: ID optID .

    $default  reduce using rule 50 (Expr)


State 62

   64 Expr: Expr BITWISEAND . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 102


State 63

   65 Expr: Expr BITWISEOR . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 103


State 64

   66 Expr: Expr BITWISEXOR . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 104


State 65

   63 Expr: Expr AND . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 105


State 66

   55 Expr: Expr ASSIGN . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 106


State 67

   59 Expr: Expr MUL . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 107


State 68

   56 Expr: Expr COMMA . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 108


State 69

   60 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 109


State 70

   67 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 110


State 71

   70 Expr: Expr GE . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 111


State 72

   72 Expr: Expr GT . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 112


State 73

   69 Expr: Expr LE . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 113


State 74

   71 Expr: Expr LT . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 114


State 75

   58 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 115


State 76

   61 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 116


State 77

   68 Expr: Expr NE . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 117


State 78

   62 Expr: Expr OR . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 118


State 79

   57 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 119


State 80

   15 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 15 (FunctionDeclarator)


State 81

   16 ParameterList: ParameterDeclaration optParamList .
   17 optParamList: optParamList . COMMA ParameterDeclaration

    COMMA  shift, and go to state 120

    $default  reduce using rule 16 (ParameterList)


State 82

   20 optParamDec: ID .

    $default  reduce using rule 20 (optParamDec)


State 83

   19 ParameterDeclaration: TypeSpec optParamDec .

    $default  reduce using rule 19 (ParameterDeclaration)


State 84

   12 DeclarationsAndStatements: error SEMI . optDecAndState

    error    shift, and go to state 39
    CHAR     shift, and go to state 1
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    SHORT    shift, and go to state 4
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    RBRACE  reduce using rule 14 (optDecAndState)

    DeclarationsAndStatements  go to state 45
    optDecAndState             go to state 121
    Declaration                go to state 47
    TypeSpec                   go to state 48
    Statement                  go to state 49
    optExp                     go to state 50
    Expr                       go to state 51


State 85

   36 Statement: IF LPAR . Expr RPAR StatementError optElse

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 122


State 86

   37 Statement: WHILE LPAR . Expr RPAR StatementError

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 123


State 87

   34 Statement: RETURN optExp .

    $default  reduce using rule 34 (Statement)


State 88

   38 StatementError: error . SEMI
   43 optState: error .

    SEMI  shift, and go to state 124

    $default  reduce using rule 43 (optState)


State 89

   39 StatementError: Statement .

    $default  reduce using rule 39 (StatementError)


State 90

   42 optState: StatementError . optState

    error    shift, and go to state 88
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    RBRACE  reduce using rule 44 (optState)

    Statement       go to state 89
    StatementError  go to state 90
    optExp          go to state 50
    optState        go to state 125
    Expr            go to state 51


State 91

   35 Statement: LBRACE optState . RBRACE

    RBRACE  shift, and go to state 126


State 92

    8 FunctionBody: LBRACE optDecAndState RBRACE .

    $default  reduce using rule 8 (FunctionBody)


State 93

   11 DeclarationsAndStatements: Declaration optDecAndState .

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 94

   30 Declarator: ID . OptDeclarator

    ASSIGN  shift, and go to state 20

    $default  reduce using rule 32 (OptDeclarator)

    OptDeclarator  go to state 22


State 95

   10 DeclarationsAndStatements: Statement optDecAndState .

    $default  reduce using rule 10 (DeclarationsAndStatements)


State 96

   40 optExp: Expr SEMI .

    $default  reduce using rule 40 (optExp)


State 97

   23 optDeclaration: optDeclaration COMMA Declarator .

    $default  reduce using rule 23 (optDeclaration)


State 98

   54 Expr: LPAR optLparRpar RPAR .

    $default  reduce using rule 54 (Expr)


State 99

   78 optExpCExp: error .

    $default  reduce using rule 78 (optExpCExp)


State 100

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   77 optExpCExp: Expr . optCExp

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 81 (optCExp)

    optCExp  go to state 127


State 101

   75 optID: LPAR optExpCExp . RPAR

    RPAR  shift, and go to state 128


State 102

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   64     | Expr BITWISEAND Expr .
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    EQ     shift, and go to state 70
    GE     shift, and go to state 71
    GT     shift, and go to state 72
    LE     shift, and go to state 73
    LT     shift, and go to state 74
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    NE     shift, and go to state 77
    PLUS   shift, and go to state 79

    $default  reduce using rule 64 (Expr)


State 103

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   65     | Expr BITWISEOR Expr .
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEXOR  shift, and go to state 64
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    PLUS        shift, and go to state 79

    $default  reduce using rule 65 (Expr)


State 104

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   66     | Expr BITWISEXOR Expr .
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    PLUS        shift, and go to state 79

    $default  reduce using rule 66 (Expr)


State 105

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   63     | Expr AND Expr .
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    PLUS        shift, and go to state 79

    $default  reduce using rule 63 (Expr)


State 106

   55 Expr: Expr . ASSIGN Expr
   55     | Expr ASSIGN Expr .
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 55 (Expr)


State 107

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   59     | Expr MUL Expr .
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    $default  reduce using rule 59 (Expr)


State 108

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   56     | Expr COMMA Expr .
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 56 (Expr)


State 109

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   60     | Expr DIV Expr .
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    $default  reduce using rule 60 (Expr)


State 110

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   67     | Expr EQ Expr .
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    GE     shift, and go to state 71
    GT     shift, and go to state 72
    LE     shift, and go to state 73
    LT     shift, and go to state 74
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 67 (Expr)


State 111

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   70     | Expr GE Expr .
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 70 (Expr)


State 112

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   72     | Expr GT Expr .

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 72 (Expr)


State 113

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   69     | Expr LE Expr .
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 69 (Expr)


State 114

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   71     | Expr LT Expr .
   72     | Expr . GT Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 71 (Expr)


State 115

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   58     | Expr MINUS Expr .
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 69
    MOD  shift, and go to state 76

    $default  reduce using rule 58 (Expr)


State 116

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   61     | Expr MOD Expr .
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    $default  reduce using rule 61 (Expr)


State 117

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   68     | Expr NE Expr .
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    GE     shift, and go to state 71
    GT     shift, and go to state 72
    LE     shift, and go to state 73
    LT     shift, and go to state 74
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 68 (Expr)


State 118

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   62     | Expr OR Expr .
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    PLUS        shift, and go to state 79

    $default  reduce using rule 62 (Expr)


State 119

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   57     | Expr PLUS Expr .
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 69
    MOD  shift, and go to state 76

    $default  reduce using rule 57 (Expr)


State 120

   17 optParamList: optParamList COMMA . ParameterDeclaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterDeclaration  go to state 129
    TypeSpec              go to state 38


State 121

   12 DeclarationsAndStatements: error SEMI optDecAndState .

    $default  reduce using rule 12 (DeclarationsAndStatements)


State 122

   36 Statement: IF LPAR Expr . RPAR StatementError optElse
   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    RPAR        shift, and go to state 130


State 123

   37 Statement: WHILE LPAR Expr . RPAR StatementError
   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    RPAR        shift, and go to state 131


State 124

   38 StatementError: error SEMI .

    $default  reduce using rule 38 (StatementError)


State 125

   42 optState: StatementError optState .

    $default  reduce using rule 42 (optState)


State 126

   35 Statement: LBRACE optState RBRACE .

    $default  reduce using rule 35 (Statement)


State 127

   77 optExpCExp: Expr optCExp .
   80 optCExp: optCExp . COMMA Expr

    COMMA  shift, and go to state 132

    $default  reduce using rule 77 (optExpCExp)


State 128

   75 optID: LPAR optExpCExp RPAR .

    $default  reduce using rule 75 (optID)


State 129

   17 optParamList: optParamList COMMA ParameterDeclaration .

    $default  reduce using rule 17 (optParamList)


State 130

   36 Statement: IF LPAR Expr RPAR . StatementError optElse

    error    shift, and go to state 133
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Statement       go to state 89
    StatementError  go to state 134
    optExp          go to state 50
    Expr            go to state 51


State 131

   37 Statement: WHILE LPAR Expr RPAR . StatementError

    error    shift, and go to state 133
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Statement       go to state 89
    StatementError  go to state 135
    optExp          go to state 50
    Expr            go to state 51


State 132

   80 optCExp: optCExp COMMA . Expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Expr  go to state 136


State 133

   38 StatementError: error . SEMI

    SEMI  shift, and go to state 124


State 134

   36 Statement: IF LPAR Expr RPAR StatementError . optElse

    ELSE  shift, and go to state 137

    ELSE      [reduce using rule 46 (optElse)]
    $default  reduce using rule 46 (optElse)

    optElse  go to state 138


State 135

   37 Statement: WHILE LPAR Expr RPAR StatementError .

    $default  reduce using rule 37 (Statement)


State 136

   55 Expr: Expr . ASSIGN Expr
   56     | Expr . COMMA Expr
   57     | Expr . PLUS Expr
   58     | Expr . MINUS Expr
   59     | Expr . MUL Expr
   60     | Expr . DIV Expr
   61     | Expr . MOD Expr
   62     | Expr . OR Expr
   63     | Expr . AND Expr
   64     | Expr . BITWISEAND Expr
   65     | Expr . BITWISEOR Expr
   66     | Expr . BITWISEXOR Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   80 optCExp: optCExp COMMA Expr .

    BITWISEAND  shift, and go to state 62
    BITWISEOR   shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 80 (optCExp)


State 137

   45 optElse: ELSE . StatementError

    error    shift, and go to state 133
    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 31
    ID       shift, and go to state 32
    INTLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    Statement       go to state 89
    StatementError  go to state 139
    optExp          go to state 50
    Expr            go to state 51


State 138

   36 Statement: IF LPAR Expr RPAR StatementError optElse .

    $default  reduce using rule 36 (Statement)


State 139

   45 optElse: ELSE StatementError .

    $default  reduce using rule 45 (optElse)
